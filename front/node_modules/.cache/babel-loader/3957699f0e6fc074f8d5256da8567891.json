{"ast":null,"code":"var _jsxFileName = \"/Users/victor/ironhack/modulo3/drivers-app/front/src/components/Router/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport isLoggedIn from 'utils/isLoggedIn';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  console.log(isLoggedIn());\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedIn() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 42\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 69\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/victor/ironhack/modulo3/drivers-app/front/src/components/Router/PrivateRoute.js"],"names":["React","Route","Redirect","isLoggedIn","PrivateRoute","component","Component","rest","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAU,EAAtB;AACA,sBACE,oBAAC,KAAD,oBACMI,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IAAYP,UAAU,kBAAK,oBAAC,SAAD,oBAAeO,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL,gBAAgC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD,CARD;;AAUA,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport isLoggedIn from 'utils/isLoggedIn';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  console.log(isLoggedIn());\n  return (\n    <Route\n      {...rest}\n      render={(props) => (isLoggedIn() ? <Component {...props} /> : <Redirect to=\"/login\" />)}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}